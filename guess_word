import random
word_list = ['человек', 'работа', 'вопрос', 'сторона', 'страна', 'случай', 'голова',
        'ребенок', 'система', 'отношение', 'женщина', 'деньги', 'машина', 'проблема',
        'решение', 'история', 'власть', 'тысяча', 'возможность', 'результат',
        'область', 'статья', 'компания', 'группа', 'развитие', 'процесс', 'условие',
        'средство', 'начало', 'уровень', 'минута', 'качество', 'дорога', 'действие',
        'государство', 'любовь', 'взгляд', 'общество', 'деятельность', 'организация',
        'президент', 'комната', 'порядок', 'момент', 'письмо', 'помощь', 'ситуация',
        'состояние', 'квартира', 'внимание', 'смерть', 'программа', 'задача',
        'предприятие', 'разговор', 'правительство', 'производство', 'информация',
        'положение', 'интерес', 'федерация', 'правило', 'управление', 'мужчина',
        'партия', 'сердце', 'движение', 'материал', 'неделя', 'чувство', 'газета',
        'причина', 'основа', 'товарищ', 'культура', 'данные', 'мнение', 'документ',
        'институт', 'проект', 'встреча', 'директор', 'служба', 'судьба', 'девушка',
        'очередь', 'состав', 'количество', 'событие', 'объект', 'создание', 'значение',
        'период', 'искусство', 'структура', 'пример', 'исследование', 'гражданин',
        'начальник', 'принцип', 'воздух', 'характер', 'борьба', 'использование',
        'размер', 'образование', 'мальчик', 'представитель', 'участие', 'девочка',
        'политика', 'картина', 'доллар', 'территория', 'изменение', 'направление',
        'рисунок', 'течение', 'церковь', 'население', 'большинство', 'музыка',
        'правда', 'свобода', 'память', 'команда', 'договор', 'дерево', 'хозяин',
        'природа', 'телефон', 'позиция', 'писатель', 'самолет', 'солнце', 'спектакль',
        'способ', 'журнал', 'руководитель', 'специалист', 'оценка', 'регион', 'процент',
        'родитель', 'требование', 'основание', 'половина', 'анализ', 'автомобиль',
        'экономика', 'литература', 'бумага', 'степень', 'господин', 'надежда',
        'предмет', 'руководство', 'площадь', 'режиссер', 'поверхность', 'ощущение',
        'станция', 'революция', 'колено', 'министерство', 'стекло']
def get_word():
  return word_list[random.randrange(0, len(word_list))].upper()




# функция получения текущего состояния
#Для вывода символа бэкслеша \ используется экранирование символа с помощью \, то есть комбинация \\
def display_hangman(tries):
    stages = [  # финальное состояние: голова, торс, обе руки, обе ноги
                '''
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |     / \\
                   -
                ''',
                # голова, торс, обе руки, одна нога
                '''
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |     / 
                   -
                ''',
                # голова, торс, обе руки
                '''
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |      
                   -
                ''',
                # голова, торс и одна рука
                '''
                   --------
                   |      |
                   |      O
                   |     \\|
                   |      |
                   |     
                   -
                ''',
                # голова и торс
                '''
                   --------
                   |      |
                   |      O
                   |      |
                   |      |
                   |     
                   -
                ''',
                # голова
                '''
                   --------
                   |      |
                   |      O
                   |    
                   |      
                   |     
                   -
                ''',
                # начальное состояние
                '''
                   --------
                   |      |
                   |      
                   |    
                   |      
                   |     
                   -
                '''
    ]
    return stages[tries]

def play(word):
# строка, содержащая символы _ на каждую букву задуманного слова
  word_completion = ['_'] * len(word)
# сигнальная метка
  guessed = False
# список уже названных букв  
  guessed_letters = []
# список уже названных слов
  guessed_words = []
# количество попыток  
  tries = 6
  print('Давайте играть в угадайку слов!')
  print(display_hangman(tries))
  print(*word_completion)

  while True:
    
    word_input = input('Введите букву или слово целиком: \n').upper()
    
    
    if not word_input.isalpha():
      print('Недопустимый символ')

    if len(word_input) == 1:
      if word_input in guessed_letters:
        print(f'букву {word_input} уже называли')
        continue

      if word_input in word:
        for i in range(len(word)):
          if word_input == word[i]:
            word_completion[i] = word_input
        print(*word_completion)
        guessed_letters.append(word_input)

      if word_input not in word:
        print(f'Буквы {word_input} нет')
        guessed_letters.append(word_input)
        tries -=1
        print(display_hangman(tries))    
    else:
      if word_input in guessed_words:
        print(f'слово {word_input} уже называли')
        continue
      if word_input != word:
        print(f'слово {word_input} не правильное')
        guessed_words.append(word_input)
        tries -=1
        print(display_hangman(tries))  
        

      

    if word_input == word or '_' not in word_completion:
        print('Поздравляем, вы угадали слово! Вы победили!')
        break
    
    if tries == 0 and word_completion != word:
      print('Игра окончена. Правильный ответ: ' + word)
      break
    

def main():
    print('Добро пожаловать!')
    word = get_word()
    play(word)
    check = input('Желаете попробавать еще? Да = д / Нет = н : ')
    if check.lower() == 'д':
      word = get_word()
      play(word)
    else:
      print("Спасибо за игру")  


main()   
  

  
  

  

  


  

